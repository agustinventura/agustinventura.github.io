<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Programación on AguasNegras</title>
    <link>https://www.aguasnegras.es/tags/programaci%C3%B3n/</link>
    <description>Recent content in Programación on AguasNegras</description>
    <image>
      <url>https://www.aguasnegras.es/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://www.aguasnegras.es/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 27 Dec 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://www.aguasnegras.es/tags/programaci%C3%B3n/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tizen Studio</title>
      <link>https://www.aguasnegras.es/posts/2018/12/27-tizen_studio/</link>
      <pubDate>Thu, 27 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2018/12/27-tizen_studio/</guid>
      <description>A finales de 2017 participé en un concurso de Samsung llamado Dispositivos por Apps y que, mediante el regalo de dispositivos pretende aumentar la presencia de aplicaciones en el market propio de Samsung (Galaxy Apps). El caso fue que que en aquel momento hice tres aplicaciones para relojes Samsung (y sin tener uno, jaja) y me saqué un reloj Samsung Gear Sport. Las aplicaciones en cuestión eran las siguientes:
##Tizen Studio</description>
    </item>
    
    <item>
      <title>Spring Boot 2, Spring Security 5 y OAuth 2</title>
      <link>https://www.aguasnegras.es/posts/2017/12/14-spring-boot-oauth2/</link>
      <pubDate>Thu, 14 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2017/12/14-spring-boot-oauth2/</guid>
      <description>Proyecto de ejemplo: https://github.com/spring-projects/spring-security/tree/5.0.0.RELEASE/samples/boot/oauth2login
Pasos:
Crear nueva aplicación en la consola de google (https://developers.google.com/identity/protocols/OpenIDConnect): https://console.developers.google.com/cloud-resource-manager?previousPage=%2F Crear credenciales OAuth para la aplicación: https://console.developers.google.com/apis/credentials?project=&amp;hellip; Asegurarse de que en redirect URI se pone http://localhost:8080/login/oauth2/code/google en application.properties establecer las propiedades spring.security.oauth2.client.registration.google.client-id y spring.security.oauth2.client.registration.google.client-secret </description>
    </item>
    
    <item>
      <title>Spring Boot y AngularJS</title>
      <link>https://www.aguasnegras.es/posts/2017/05/07-spring-boot-y-angularjs/</link>
      <pubDate>Sun, 07 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2017/05/07-spring-boot-y-angularjs/</guid>
      <description>Con Spring Boot es relativamente sencillo generar un backend para una aplicación por complejo que sea su dominio, precisamente lo bueno de Spring Boot es que permite realizar rápidamente todo el trabajo de infraestructura para centrarse por una parte en el código del dominio y por otra&amp;hellip; en la UI. En los últimos años hemos pasado de un paradigma de desarrollo en servidor a uno nuevo cliente/servidor (otra vez). El servidor suele ser una API [REST ] (https://en.</description>
    </item>
    
    <item>
      <title>Logging de consultas y parametros de Hibernate</title>
      <link>https://www.aguasnegras.es/posts/2017/03/27-logging-consultas-parametros-hibernate/</link>
      <pubDate>Mon, 27 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2017/03/27-logging-consultas-parametros-hibernate/</guid>
      <description>Una de las funcionalidades básicas de Hibernate es abstraer la base de datos, pero sin embargo en tiempo de desarrollo resulta bastante útil controlar las consultas que va generando el motor así como sus parámetros. Desde las primeras versiones Hibernate tiene una propiedad, show_sql que muestra estas consultas por consola. Esto tiene dos desventajas, la primera que usa la consola y la segunda que para habilitarlo y deshabilitarlo se depende de un archivo de configuración específico (normalmente el propio de Hibernate o incluso una clase Java si se esta utilizando la configuración Java de Spring).</description>
    </item>
    
    <item>
      <title>Nueva API de Fecha y Hora en Java 8</title>
      <link>https://www.aguasnegras.es/posts/2016/06/16-nueva-api-de-fecha-y-hora-en-java-8/</link>
      <pubDate>Thu, 16 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2016/06/16-nueva-api-de-fecha-y-hora-en-java-8/</guid>
      <description>Unos apuntes rápidos sobre la nueva API de fecha y hora en Java 8. Primero, clases fundamentales:
LocalDate: La fecha en el contexto local. En una zona horaria determinada. LocalTime: La hora en el contexto local. LocalDateTime: La composición de ambas. Aquí lo fundamental es que corresponden al contexto local del observador, es decir esa hora es válida para Sevilla pero no para Canarias. La hora y la fecha (por extensión) si la necesito completa se representa mediante una fecha/hora y un offset con respecto a UTC.</description>
    </item>
    
    <item>
      <title>Logging en Java con SLF4J y Log4j2</title>
      <link>https://www.aguasnegras.es/posts/2013/09/02-logging-en-java-con-slf4j-y-log4j2/</link>
      <pubDate>Mon, 02 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2013/09/02-logging-en-java-con-slf4j-y-log4j2/</guid>
      <description>En este artículo se hace una breve introducción a la generación de logs en Java usando SLF4J y Log4j2, así como un breve repaso de las mejores prácticas relativas.
En Java se da una circunstancia muy extraña, siendo el logging tan importante como es, no hay una buena solución integrada en el framework como tal. Es cierto que existe la Java Logging API o Java Logging Framework, pero fue una adición bastante a posteriori (en concreto, se añadió en el 2002, en la versión 1.</description>
    </item>
    
    <item>
      <title>Emulador de Android en Ubuntu (Initializing hardware OpenGLES emulation support)</title>
      <link>https://www.aguasnegras.es/posts/2013/03/09-emulador-de-android-en-ubuntu-initializing-hardware-opengles-emulation-support/</link>
      <pubDate>Sat, 09 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2013/03/09-emulador-de-android-en-ubuntu-initializing-hardware-opengles-emulation-support/</guid>
      <description>A veces (normalmente en una instalación nueva), los emuladores de Android no arrancan en Ubuntu de 64 bits debido a un error con OpenGLES.
Para comprobar si la solución es aplicable, hay que ejecutar este comando desde la consola:
$ ./emulator -avd GalaxyS -verbose Donde GalaxyS será el nombre del avd que se desee arrancar, al final del log deberemos ver algo así:
emulator: Initializing hardware OpenGLES emulation support Violación de segmento (`core&amp;#39; generado) El problema y su solución se encuentra reportado aquí.</description>
    </item>
    
    <item>
      <title>CrankPlay, lógica propia</title>
      <link>https://www.aguasnegras.es/posts/2012/08/14-crankplay-l%C3%B3gica-propia/</link>
      <pubDate>Tue, 14 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2012/08/14-crankplay-l%C3%B3gica-propia/</guid>
      <description>Vale, una vez terminado el guarreo con el ciclo de vida, toca implementar la lógica de negocio propia de la aplicación. Al ser JustPlay un reproductor de mp3 y ogg, vamos a ver que lógica tenemos que implementar:
Entre los artefactos existentes voy a dividir la responsabilidad de la siguiente manera:</description>
    </item>
    
    <item>
      <title>CrankPlay, binding al servicio</title>
      <link>https://www.aguasnegras.es/posts/2012/05/18-crankplay-binding-al-servicio/</link>
      <pubDate>Fri, 18 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2012/05/18-crankplay-binding-al-servicio/</guid>
      <description>El siguiente paso en el desarrollo de JustPlay resulta bastante obvio, ligar el MediaPlayer con el MediaService, o lo que es lo mismo, hacer un bind. Para no perderme, he hecho un pequeño diagrama de interacción entre MediaPlayer y MediaService.
En él se aprecia que aparte de los métodos de negocio necesarios (denotados por una línea discontínua), todavía me faltan por implementar dos métodos del ciclo de vida: el bind y el unbind, que son precisamente los que me permiten establecer una comunicación bidireccional con el MediaService para indicar acciones y realizar y obtener resultados.</description>
    </item>
    
    <item>
      <title>JustPlay, explorador de archivos</title>
      <link>https://www.aguasnegras.es/posts/2012/05/17-crankplay-explorador-de-archivos/</link>
      <pubDate>Thu, 17 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2012/05/17-crankplay-explorador-de-archivos/</guid>
      <description>Uno de mis requisitos en JustPlay (de hecho, el fundamental), es poder reproducir a partir de archivos sueltos o directorios.
Por tanto, necesitaré un explorador de archivos, aunque sea muy básico, que permita ver los archivos en la memoria del dispositivo y añadirlos a una lista de reproducción. Gráficamente, la interacción entre las actividades sería así. En general la devolución del parámetro no tendrá mayor problema, ya que se puede hacer a través del intent de vuelta.</description>
    </item>
    
    <item>
      <title>CrankPlay, arquitectura</title>
      <link>https://www.aguasnegras.es/posts/2012/05/14-crankplay-arquitectura/</link>
      <pubDate>Mon, 14 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2012/05/14-crankplay-arquitectura/</guid>
      <description>Bueno, ya va siendo hora de empezar el trabajo en JustPlay.
Después de mucho documentarme sobre Activities, Services y Threads, creo que tengo una aproximación bastante buena a la arquitectura que voy a intentar implementar.
Un requisito fundamental es que la aplicación consuma los mínimos recursos posibles, con lo cual cabría pensar que se puede implementar mediante una Activity normal y corriente. Esto es un error, una Activity tiene un ciclo de vida determinado y cabe suponer (aunque no he hecho la prueba) que en cuanto pasara al estado &amp;ldquo;Paused&amp;rdquo;, se terminaría la reproducción de música.</description>
    </item>
    
    <item>
      <title>CrankPlay, controles de reproducción</title>
      <link>https://www.aguasnegras.es/posts/2012/04/16-crankplay-controles-de-reproducci%C3%B3n/</link>
      <pubDate>Mon, 16 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2012/04/16-crankplay-controles-de-reproducci%C3%B3n/</guid>
      <description>Última parte del tutorial que sigo para el CrankPlay, MusicDroid, ahora voy a añadir los controles básicos de reproducción. Esta parte se me antoja que no me será de mucha utilidad, ya que es bastante dependiente del diseño de la aplicación, pero que demonios&amp;hellip;
El objetivo de esta parte es añadir los controles de reproducción a la aplicación. Estos se mostrarán como una capa semitransparente sobre la lista de canciones.</description>
    </item>
    
    <item>
      <title>CrankPlay, Service para reproducir sonido.</title>
      <link>https://www.aguasnegras.es/posts/2012/04/06-crankplay-service-para-reproducir-sonido/</link>
      <pubDate>Fri, 06 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2012/04/06-crankplay-service-para-reproducir-sonido/</guid>
      <description>Siguiendo la segunda parte de MusicDroid, voy a hacer un Service (servicio) para reproducir la música. Para lo cual necesito primero definir claramente que es un Service.
Según la documentación oficial de Android, un Service es&amp;hellip; bueno, es una chapa, vaya que un Service es un proceso en segundo plano sin interfaz de usuario y con el cual puede comunicarse cualquier otro componente o artefacto que viva en el ecosistema. La parte interesante es que esta comunicación es asíncrona y se hace por paso de mensajes (como todo en Android), así que cuidado con esta parte.</description>
    </item>
    
    <item>
      <title>WordPress SEO, aspectos avanzados y conclusiones.</title>
      <link>https://www.aguasnegras.es/posts/2012/04/05-wordpress-seo-aspectos-avanzados-y-conclusiones/</link>
      <pubDate>Thu, 05 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2012/04/05-wordpress-seo-aspectos-avanzados-y-conclusiones/</guid>
      <description>Sigo con el artículo de Yoast sobre WordPress SEO.
El siguiente punto en el que incide el artículo es en el de optimización de las etiquetas &amp;quot;&amp;lt;meta name=&amp;ldquo;description&amp;rdquo;&amp;gt;&amp;quot;, estas etiquetas son utilizadas por el buscador para devolver la página cuando su contenido es coincidente con una búsqueda.
Por defecto, el buscador utiliza la primera frase de la página, pero con el plugin podemos establecer una a mano. Si tomo el post anterior como ejemplo, ahora mismo me sale lo siguiente: &amp;ldquo;Bueno, pues para darme un poco de visibilidad en Google, he instalado el plugin WordPress SEO y tiene un estupendo artículo de acciones a &amp;hellip;&amp;rdquo; Esta descripción es obviamente mala y se puede mejorar bastante.</description>
    </item>
    
    <item>
      <title>WordPress SEO, Google Webmaster Tools y optimización de títulos.</title>
      <link>https://www.aguasnegras.es/posts/2012/04/04-wordpress-seo-google-webmaster-tools-y-optimizaci%C3%B3n-de-t%C3%ADtulos/</link>
      <pubDate>Wed, 04 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2012/04/04-wordpress-seo-google-webmaster-tools-y-optimizaci%C3%B3n-de-t%C3%ADtulos/</guid>
      <description>Bueno, pues para darme un poco de visibilidad en Google, he instalado el plugin WordPress SEO y tiene un estupendo artículo de acciones a realizar para utilizarlo, así que lo voy a seguir y voy a ir comentando.
A día de hoy lo que tengo es un WordPress 3.3.1 con WordPress SEO 1.1.5
A continuación voy a ir siguiendo lo más fielmente posible las instrucciones que se dan en el artículo punto por punto.</description>
    </item>
    
    <item>
      <title>CrankPlay, mi primer proyecto Android. Parte 1</title>
      <link>https://www.aguasnegras.es/posts/2012/04/01-crankplay-mi-primer-proyecto-android.-parte-1/</link>
      <pubDate>Sun, 01 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2012/04/01-crankplay-mi-primer-proyecto-android.-parte-1/</guid>
      <description>Bueno, pues después de un tiempo dedicado a un proyecto que tengo por ahí y que anda un poco empantanado, voy a empezar a hacer algo que llevo tiempo queriendo hacer. Un reproductor de mp3 para mi móvil.
Voy a empezar haciendo una pequeña elicitación de requisitos &amp;ldquo;grosso modo&amp;rdquo; para tenerlo como guía de aquí en adelante.
Requisitos
El reproductor tendrá las siguientes funcionalidades:
Como requisitos no funcionales:
Enfoque del Desarrollo</description>
    </item>
    
    <item>
      <title>Cambiar orientación del emulador de Android</title>
      <link>https://www.aguasnegras.es/posts/2012/02/23-cambiar-orientaci%C3%B3n-del-emulador-de-android/</link>
      <pubDate>Thu, 23 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2012/02/23-cambiar-orientaci%C3%B3n-del-emulador-de-android/</guid>
      <description>Para cambiar la orientación del emulador de android de horizontal a vertical y viceversa, basta con pulsar ctrl+F11.</description>
    </item>
    
    <item>
      <title>Amazon Elastic Beanstalk</title>
      <link>https://www.aguasnegras.es/posts/2012/01/19-amazon-elastic-beanstalk/</link>
      <pubDate>Thu, 19 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2012/01/19-amazon-elastic-beanstalk/</guid>
      <description>Visto que con Heroku se me esta atragantando el tema del despliegue de JSF 2, me he decidido a seguir los cantos de sirena y probar Amazon Elastic Beanstalk. La publicidad dice que Amazon me dá gratuitamente un Tomcat 6 o Tomcat 7 en la nube, así que merecía darle una ojeada. Lo primero de lo que me doy cuenta es que Amazon Elastic Beanstalk en realidad no es solo un Tomcat, sino que mas bien podríamos definirlo como un agrupamiento de tecnologías que Amazon ya tenía que se ofrecen simplificadamente y bajo un mismo paragüas, como EC2, S3, EBS, CloudWatch, etc&amp;hellip; La página de Beanstalk promete que se despliegan WARs normales y corrientes y que se puede usar cualquier librería Java con normalidad, a esto le sumamos Amazon SimpleDB como base de datos relacional y Amazon DynamoDB como NoSQL y tenemos un stack potentísimo a nuestra disposición.</description>
    </item>
    
    <item>
      <title>Sun Java y OpenJDK en Linux</title>
      <link>https://www.aguasnegras.es/posts/2011/11/11-sun-java-y-openjdk-en-linux/</link>
      <pubDate>Fri, 11 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/11/11-sun-java-y-openjdk-en-linux/</guid>
      <description>Para trabajar con Heroku, recomiendan usar OpenJDK, sin embargo, hasta el momento vengo usando el Sun JDK, así que voy a instalar el OpenJDK:
$ sudo apt-get install openjdk-6-jdk Con esto se instala el OpenJDK 6, pero con un desafortunado efecto secundario:
$ java -version java version &amp;#34;1.6.0_22&amp;#34; OpenJDK Runtime Environment (IcedTea6 1.10.2) (6b22-1.10.2-0ubuntu1~11.04.1) OpenJDK 64-Bit Server VM (build 20.0-b11, mixed mode) Efectivamente, se ha establecido el OpenJDK como máquina virtual de Java por defecto, pero esto no es lo que quiero (al menos, yo no), me gustaría seguir usando el Sun JDK.</description>
    </item>
    
    <item>
      <title>Despliegue de Spring Roo en Heroku</title>
      <link>https://www.aguasnegras.es/posts/2011/10/13-despliegue-de-spring-roo-en-heroku/</link>
      <pubDate>Thu, 13 Oct 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/10/13-despliegue-de-spring-roo-en-heroku/</guid>
      <description>Hasta ahora, las aplicaciones que he desplegado eran muy básicas, hechas con jsp y acceso a base de datos a base de jdbc plano.
Estas tecnologías no estan mal (y de hecho son la base de todo lo posterior), pero lo más normal es utilizar frameworks para el desarrollo de aplicaciones Java.
La quinta práctica del libro de Java para Heroku es un despliegue de aplicaciones hechas con Spring Roo en Heroku.</description>
    </item>
    
    <item>
      <title>Add-ons para Heroku</title>
      <link>https://www.aguasnegras.es/posts/2011/09/22-add-ons-para-heroku/</link>
      <pubDate>Thu, 22 Sep 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/09/22-add-ons-para-heroku/</guid>
      <description>La arquitectura de Heroku es modular, es decir, se pueden añadir funcionalidades al Stack mediante piezas de software llamadas add-ons. Un ejemplo de eso lo vi aquí cuando añadí el soporte para gestión de releases a través de un add-on.
Hay bastantes más add-ons disponibles en la página, para enviar sms, para conectar como amazon rds, etc&amp;hellip; Los hay gratuitos, de pago, en beta&amp;hellip; en fín, de todo tipo.
En esta práctica voy a añadir el add-on de Redis.</description>
    </item>
    
    <item>
      <title>Procesos Java en Heroku</title>
      <link>https://www.aguasnegras.es/posts/2011/09/22-procesos-java-en-heroku/</link>
      <pubDate>Thu, 22 Sep 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/09/22-procesos-java-en-heroku/</guid>
      <description>Heroku no solo sirve para ejecutar aplicaciones web Java, sino que en realidad sirve para ejecutar cualquier tipo de aplicación Java. Observando el proyecto podemos ver que hay dos aplicaciones bien diferenciadas, la aplicación web (que se lanza a través del script webapp generado por Maven) y la aplicación SchemaGenerator, ejecutada a través del script schemaGenerator. Mientras que la primera es una aplicación web normal y corriente, SchemaGenerator es simplemente un proceso Java puro, se lanza se ejecuta y termina sin ningún tipo de interfaz gráfica involucrada.</description>
    </item>
    
    <item>
      <title>Java, PostgreSQL y Heroku</title>
      <link>https://www.aguasnegras.es/posts/2011/09/18-java-postgresql-y-heroku/</link>
      <pubDate>Sun, 18 Sep 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/09/18-java-postgresql-y-heroku/</guid>
      <description>Ya he visto como desplegar en Heroku, pero lo que he desplegado no llega ni al nivel de aplicación web, en realidad es una página web estática y punto. Para poder considerarla aplicación web ha de tener algún tipo de contenido dinámico, normalmente este contenido se genera de algún almacén persistente, usualmente una base de datos. Por tanto voy a ver como me las apaño para poner una base de datos en Heroku y atacarla desde mi aplicación.</description>
    </item>
    
    <item>
      <title>Java en Heroku</title>
      <link>https://www.aguasnegras.es/posts/2011/09/16-java-en-heroku/</link>
      <pubDate>Fri, 16 Sep 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/09/16-java-en-heroku/</guid>
      <description>Una de las cosas que más me impresionó de Ruby on Rails, más que el framework en sí o el lenguaje, fue el excelente soporte que había creado la comunidad. Hablo específicamente de como se enlazaba tu proyecto local con GitHub y GitHub con Heroku, con lo cual podías tener el proyecto en producción en cuestión de minutos.
Esto es algo que lamentablemente no he visto en Java en los cinco años que llevo dedicado a estos menesteres, y menos con un alojamiento de la categoría de Heroku (otro día hablaré sobre ello y el PaaS, etc&amp;hellip;).</description>
    </item>
    
    <item>
      <title>GitHub y Markdown</title>
      <link>https://www.aguasnegras.es/posts/2011/08/30-github-y-markdown/</link>
      <pubDate>Tue, 30 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/08/30-github-y-markdown/</guid>
      <description>Si entro en el repositorio PruebaGit que cree en este artículo, GitHub es tan amable de avisarme de que no encuentra un archivo README.
En primer lugar, ¿qué es un README? Un archivo README contiene información genérica sobre el proyecto, como instalar, como configurar, como usar, licencia, contacto con el autor, bugs, etc&amp;hellip; Para más detalles esta el artículo de la wikipedia (en inglés, el artículo en español es bastante malo).</description>
    </item>
    
    <item>
      <title>Localización en Android</title>
      <link>https://www.aguasnegras.es/posts/2011/08/17-localizaci%C3%B3n-en-android/</link>
      <pubDate>Wed, 17 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/08/17-localizaci%C3%B3n-en-android/</guid>
      <description>En general en mi trabajo soy fanático de la internacionalización (i18n) y la localización (L18n), aunque la aplicación que este en desarrollo ni siquiera vaya a ser traducida nunca a ningún otro idioma.
El motivo es sencillo, si uso localización, cuando necesite poner un botón &amp;ldquo;Buscar&amp;rdquo; lo pondré en un archivo, por lo que al final todos los botones de &amp;ldquo;Buscar&amp;rdquo; de la aplicación apuntarán al mismo archivo (al mismo recurso).</description>
    </item>
    
    <item>
      <title>Tutorial de Bloc de Notas para Android - Parte 7</title>
      <link>https://www.aguasnegras.es/posts/2011/08/10-tutorial-de-bloc-de-notas-para-android-parte-7/</link>
      <pubDate>Wed, 10 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/08/10-tutorial-de-bloc-de-notas-para-android-parte-7/</guid>
      <description>Actualmente, la aplicación de bloc de notas deja mucho que desear, no solo con respecto al aspecto gráfico o usabilidad de la misma, sino que además no esta integrada en el ciclo de vida.
Una Activity tiene un ciclo de vida determinado y el programador se tiene que ajustar a él. Por ejemplo, si se arranca la aplicación y se le da a crear o editar una nota y a continuación al botón de atrás, la Activity se cierra inesperadamente.</description>
    </item>
    
    <item>
      <title>Tutorial de Bloc de Notas para Android - Interludio</title>
      <link>https://www.aguasnegras.es/posts/2011/08/04-tutorial-de-bloc-de-notas-para-android-interludio/</link>
      <pubDate>Thu, 04 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/08/04-tutorial-de-bloc-de-notas-para-android-interludio/</guid>
      <description>Bueno, pues como me quedé ayer con las ganas, voy a hacer hoy un poco de microbenchmarking. En general, y después de hablar con spCoder, me quedó claro que hay en general, cuatro formas de hacer ese onClick:
Por curiosidad, voy a aplicar cada una de las soluciones y voy a tomar dos medidas:
El proceso de prueba será:
Primera forma, código:
protected void onCreate(Bundle savedInstanceState) { long onCreateStartTime = System.</description>
    </item>
    
    <item>
      <title>Instalación de Entorno de Android en Linux</title>
      <link>https://www.aguasnegras.es/posts/2011/08/03-instalaci%C3%B3n-de-entorno-de-android-en-linux/</link>
      <pubDate>Wed, 03 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/08/03-instalaci%C3%B3n-de-entorno-de-android-en-linux/</guid>
      <description>Pasos para instalar el Android SDK, Eclipse y Android Development Toolkit en Eclipse:
Listo, con esto ya esta todo instalado en Eclipse y listo para funcionar, otro día repasaré el proceso de creado de AVDs.</description>
    </item>
    
    <item>
      <title>Tutorial de Bloc de Notas para Android - Parte 6</title>
      <link>https://www.aguasnegras.es/posts/2011/08/03-tutorial-de-bloc-de-notas-para-android-parte-6/</link>
      <pubDate>Wed, 03 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/08/03-tutorial-de-bloc-de-notas-para-android-parte-6/</guid>
      <description>Bueno, pues ayer había rellenado el cuerpo del onCreate del EditNote.java y quedaba una cosa que no me gusta un pelo, que es rellenar ese onClick de la clase anónima interna. Para no salirme mucho (de momento) del objetivo, que es el tutorial, me limitaré a seguir el tutorial y después haré los experimentos oportunos.
Recordando igualmente de antesdeayer, toda la interacción con la base de datos se hace en la Activity Notepadv2, con lo cual el onClick lo único que ha de hacer es montar el mensaje necesario y devolverlo a la actividad que le ha invocado.</description>
    </item>
    
    <item>
      <title>Tutorial de Bloc de Notas para Android - Parte 5</title>
      <link>https://www.aguasnegras.es/posts/2011/08/02-tutorial-de-bloc-de-notas-para-android-parte-5/</link>
      <pubDate>Tue, 02 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/08/02-tutorial-de-bloc-de-notas-para-android-parte-5/</guid>
      <description>Con respecto a la pantalla de edición/inserción de notas nuevas, nos dan ya el layout, llamado note_edit.xml. En él tenemos una distribución de elementos de la siguiente manera: LinearLayout, TextView, EditText y Button (todo ello dentro a su vez de un LinearLayout). El primer LinearLayout tiene orientation=vertical, para disponer los elementos en vertical (nada que ver con la posición de la pantalla) y el segundo tiene orientation=horizontal. Dentro de él hay un TextView y un EditText con layout_weight = 1.</description>
    </item>
    
    <item>
      <title>Tutorial de Bloc de Notas para Android – Parte 4</title>
      <link>https://www.aguasnegras.es/posts/2011/08/01-tutorial-de-bloc-de-notas-para-android-parte-4/</link>
      <pubDate>Mon, 01 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/08/01-tutorial-de-bloc-de-notas-para-android-parte-4/</guid>
      <description>Recapitulando lo anterior (hace ya 13 días a lo tonto&amp;hellip;), se había a añadir la funcionalidad CRUD al bloc de notas, ya tengo puestos los métodos en el código del activity y solo hará falta completar.
Primero. Borrado.
El borrado habitualmente se hace mediante el menú contextual (igual que la edición, ahora que lo pienso&amp;hellip;), para ello hay que registrar en el menú contextual el ListView, todo se puede hacer mediante métodos de la clase Activity, añadiendo al onCreate lo siguiente:</description>
    </item>
    
    <item>
      <title>Tutorial de Bloc de Notas para Android - Parte 3</title>
      <link>https://www.aguasnegras.es/posts/2011/07/12-tutorial-de-bloc-de-notas-para-android-parte-3/</link>
      <pubDate>Tue, 12 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/07/12-tutorial-de-bloc-de-notas-para-android-parte-3/</guid>
      <description>Sigo con el tutorial, que más vale tarde que nunca&amp;hellip; Entonces, repasando un poco lo hecho, tengo una tabla en la bd de la aplicación (un sqlite) que contiene las notas.
Asimismo, tengo un activity que se encarga de presentar una lista con las notas creadas que de momento no tienen nada, tan solo un título &amp;ldquo;Note x&amp;rdquo; donde x es un autosecuencial, además un secuencial de Java, por lo cual en cada ejecución de la aplicación se repiten ya que se resetea el contador a 1.</description>
    </item>
    
    <item>
      <title>Tutorial de Bloc de Notas para Android - Parte 2</title>
      <link>https://www.aguasnegras.es/posts/2011/07/04-tutorial-de-bloc-de-notas-para-android-parte-2/</link>
      <pubDate>Mon, 04 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/07/04-tutorial-de-bloc-de-notas-para-android-parte-2/</guid>
      <description>Para empezar a unir la base de datos con las vistas que hemos definido, lo primero es usar la clase ListActivity, que como dice la documentación, es una actividad que presenta una lista de elementos provenientes de un array o un cursor y aporta una serie de gestores llamados cuando el usuario interactua con ellos:
public class Notepadv1 extends ListActivity Ahora hay que completar el onCreate(), cuando se inicia la aplicación, ¿qué tiene que ocurrir?</description>
    </item>
    
    <item>
      <title>Tutorial de Bloc de Notas para Android - Parte 1</title>
      <link>https://www.aguasnegras.es/posts/2011/06/29-tutorial-de-bloc-de-notas-para-android-parte-1/</link>
      <pubDate>Wed, 29 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/06/29-tutorial-de-bloc-de-notas-para-android-parte-1/</guid>
      <description>La página principal de este tutorial esta aquí.
En general te recomiendan tener una idea de como funciona Android (para lo cual es bueno repasar los Fundamentos de Aplicaciones) y descargar los proyectos preconfigurados en zip.
Descomprimo el zip como recomiendan en $HOME/Android/NotepadCodeLab.
El tutorial esta divido en tres ejercicios (que vienen con sus correspondientes soluciones) y un extra para aprender a depurar el ciclo de vida de Android.
En el primero voy a crear una lista de notas y voy a añadir notas pero no voy a poder editarlas.</description>
    </item>
    
    <item>
      <title>Redimensionar el emulador de Android</title>
      <link>https://www.aguasnegras.es/posts/2011/06/28-redimensionar-el-emulador-de-android/</link>
      <pubDate>Tue, 28 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/06/28-redimensionar-el-emulador-de-android/</guid>
      <description>Nota mental:
Para redimensionar la ventana del emulador de android en Eclipse:
Listo</description>
    </item>
    
    <item>
      <title>Un poco de Ruby para Rails</title>
      <link>https://www.aguasnegras.es/posts/2011/02/21-un-poco-de-ruby-para-rails/</link>
      <pubDate>Mon, 21 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/02/21-un-poco-de-ruby-para-rails/</guid>
      <description>Bueno, parece que me han escuchado. El capítulo 4 del tutorial va sobre Ruby más que sobre Rails, para profundizar en el lenguaje y entender conceptos básicos (más allá de lo que viene siendo una variable de instancia&amp;hellip;). Lo que voy a hacer es definir un helper para construir el contenido de la etiqueta title, en vez de usar una cadena concatenada a una variable. Para ello edito el app/helpers/application_helper.rb y añado esto:</description>
    </item>
    
    <item>
      <title>Un poco de dinamismo</title>
      <link>https://www.aguasnegras.es/posts/2011/02/20-un-poco-de-dinamismo/</link>
      <pubDate>Sun, 20 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/02/20-un-poco-de-dinamismo/</guid>
      <description>Siguiendo con el tutorial, ya sé añadir páginas y enrutarlas, va siendo hora de añadir algo de contenido dinámico a las páginas. Voy a hacer que el título cambie según la página en la que este. Y esto es lo que voy a chequear con TDD, es decir, que al solicitar /pages/home el título vale Home y que al solicitar /pages/about, el título vale About. En rspec, quedaría algo así:</description>
    </item>
    
    <item>
      <title>Comenzando el Testeo</title>
      <link>https://www.aguasnegras.es/posts/2011/02/16-comenzando-el-testeo/</link>
      <pubDate>Wed, 16 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/02/16-comenzando-el-testeo/</guid>
      <description>Estoy rememorando mi trabajo de hace 8 horas&amp;hellip; variables que no sabes si se usan en otro sitio, temor a limpiar cosas, en fín&amp;hellip; una pesadilla. Por eso, ESTE es el momento de empezar el testing en la aplicación RoR, he hecho un controlador (vacío, sí) y es hora de asegurarnos que ahora y siempre haga lo que tiene que hacer (nada). El tutorial, aparte de recomendar TDD y contarte que RSpec es un domain specific language para hacer pruebas en Ruby, dice de instalar autotest, una herramienta que ejecuta continuamente las pruebas sobre los archivos cambiados.</description>
    </item>
    
    <item>
      <title>Bases de Datos para Desarrolladores Java - Integridad Referencial</title>
      <link>https://www.aguasnegras.es/posts/2011/02/01-bases-de-datos-para-desarrolladores-java-integridad-referencial/</link>
      <pubDate>Tue, 01 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/02/01-bases-de-datos-para-desarrolladores-java-integridad-referencial/</guid>
      <description>Como el entorno de desarrollo se ha caído y llevo dos horas aburrido, sigo.
Segundo Ítem: Usar siempre SIEMPRE la integridad referencial.
O lo que es lo mismo, si usamos MySQL NO usar MyIsam, ya que no tiene soporte para integridad referencial.
Hay gente que dice que trabajar sin integridad referencial es más rápido y cómodo. Es verdad, pero al final es como dispararse en el pie. Muchas veces la integridad referencial te salva de cometer errores de calado.</description>
    </item>
    
    <item>
      <title>Bases de Datos para Desarrolladores Java - Introducción e Índices</title>
      <link>https://www.aguasnegras.es/posts/2011/01/25-bases-de-datos-para-desarrolladores-java-introducci%C3%B3n-e-%C3%ADndices/</link>
      <pubDate>Tue, 25 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/01/25-bases-de-datos-para-desarrolladores-java-introducci%C3%B3n-e-%C3%ADndices/</guid>
      <description>En general en una aplicación Java cualquiera los problemas empiezan desde abajo, con el diseño de la base de datos. He visto (y trabajo) con bases de datos en las que una tabla tiene 5 campos de primary key y uno solo de información. Que esto es un desperdicio se ve a simple vista. Después vienen los parches a nivel superior (en Java) y se termina yendo al infierno el rendimiento de la aplicación.</description>
    </item>
    
    <item>
      <title>Instalación de Ruby on Rails en Ubuntu</title>
      <link>https://www.aguasnegras.es/posts/2010/12/27-instalaci%C3%B3n-de-ruby-on-rails-en-ubuntu/</link>
      <pubDate>Mon, 27 Dec 2010 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2010/12/27-instalaci%C3%B3n-de-ruby-on-rails-en-ubuntu/</guid>
      <description>En este post he encontrado bastante bien resumidos los pasos: Life of a Radar</description>
    </item>
    
    <item>
      <title>Sirviendo contenido estático</title>
      <link>https://www.aguasnegras.es/posts/2010/12/27-sirviendo-contenido-est%C3%A1tico/</link>
      <pubDate>Mon, 27 Dec 2010 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2010/12/27-sirviendo-contenido-est%C3%A1tico/</guid>
      <description>Después de unas buenas (y merecidas) vacaciones, sigo con el tutorial de RoR, esta vez en el capítulo tres voy a empezar a desarrollar una aplicación completa y entendiéndola en profundidad, ya no solo voy a usar scaffolding y punto. Empiezo por la sección de &amp;ldquo;Contenido Estático&amp;rdquo;, me parece cojonuda la idea, siempre es buena idea maximizar a tope el contenido estático, ya que no solo salva tiempo de CPU, sino que además permite que funcionen las técnicas de cacheo de apache, etc&amp;hellip; Creo el proyecto nuevo tal y como se especifica.</description>
    </item>
    
    <item>
      <title>Seguimos con el Tuíte, ahora vamos a crear los microposts</title>
      <link>https://www.aguasnegras.es/posts/2010/12/02-seguimos-con-el-tu%C3%ADte-ahora-vamos-a-crear-los-microposts/</link>
      <pubDate>Thu, 02 Dec 2010 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2010/12/02-seguimos-con-el-tu%C3%ADte-ahora-vamos-a-crear-los-microposts/</guid>
      <description>case@aesir:~/RoR/proyectos/demo_app$ rails generate scaffold Micropost content:string user_id:integer case@aesir:~/RoR/proyectos/demo_app$ rake db:migrate (in /home/case/RoR/proyectos/demo_app) == CreateMicroposts: migrating =============================================== -- create_table(:microposts) -&amp;amp;gt; 0.0061s == CreateMicroposts: migrated (0.0066s) ====================================== cat config/routes.rb DemoApp::Application.routes.draw do resources :microposts resources :users form id=&amp;#34;new_micropost&amp;#34; class=&amp;#34;new_micropost&amp;#34; action=&amp;#34;/microposts&amp;#34; accept-charset=&amp;#34;UTF-8&amp;#34; method=&amp;#34;post&amp;#34; hmm&amp;hellip; un poco más abajo:
input name=&amp;#34;_method&amp;#34; type=&amp;#34;hidden&amp;#34; value=&amp;#34;put&amp;#34; /&amp;gt; a href=&amp;#34;/microposts/1&amp;#34; data-confirm=&amp;#34;Are you sure?&amp;#34; data-method=&amp;#34;delete&amp;#34; rel=&amp;#34;nofollow&amp;#34; case@aesir:~/RoR/proyectos/demo_app$ cat app/models/micropost.rb class Micropost &amp;amp;lt; ActiveRecord::Base validates :content, :length =&amp;amp;gt; { :maximum =&amp;amp;gt; 144} end 1 error prohibited this micropost from being saved: Content is too long (maximum is 144 characters) case@aesir:~/RoR/proyectos/demo_app$ cat app/models/user.</description>
    </item>
    
    <item>
      <title>Capítulo Dos - Vamos a hacer un Twuttur en Ruby on Rails</title>
      <link>https://www.aguasnegras.es/posts/2010/11/25-cap%C3%ADtulo-dos-vamos-a-hacer-un-twuttur-en-ruby-on-rails/</link>
      <pubDate>Thu, 25 Nov 2010 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2010/11/25-cap%C3%ADtulo-dos-vamos-a-hacer-un-twuttur-en-ruby-on-rails/</guid>
      <description>Pues eso, utilizando scaffolding a cascoporro vamos a hacer un Twuttur, la idea no es hacerme experto en RoR del tirón, sino ir poco a poco viendo la estructura en general y el funcionamiento de una aplicación.
rails new demo_app Y ya tenemos la base creada. Edito el Gemfile, que creo recordar que contiene los módulos (Gems) de los que depende la aplicación. Lo dejo con esta pinta:
source &amp;#39;http://rubygems.org&amp;#39; gem &amp;#39;rails&amp;#39;, &amp;#39;3.</description>
    </item>
    
    <item>
      <title>Aprendiendo Ruby on Rails - Resumen Capítulo Uno</title>
      <link>https://www.aguasnegras.es/posts/2010/11/21-aprendiendo-ruby-on-rails-resumen-cap%C3%ADtulo-uno/</link>
      <pubDate>Sun, 21 Nov 2010 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2010/11/21-aprendiendo-ruby-on-rails-resumen-cap%C3%ADtulo-uno/</guid>
      <description>Bueno, pues en el capítulo uno del tutorial he configurado el entorno y seguido un pequeño workflow de trabajo, desde la creación de la aplicación hasta su despliegue en Heroku, pasando por el control de versiones con Git y GitHub.
El único inconveniente que le veo es que&amp;hellip; efectivamente, no he aprendido nada de Ruby ni de Rails.
Ahora pequeña lista de cosas que me gustan:
Cosas que no me han gustado:</description>
    </item>
    
    <item>
      <title>Despliegue en Heroku</title>
      <link>https://www.aguasnegras.es/posts/2010/11/21-despliegue-en-heroku/</link>
      <pubDate>Sun, 21 Nov 2010 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2010/11/21-despliegue-en-heroku/</guid>
      <description>Por último y para acabar con el ciclo de vida, voy a ver el despliegue en Heroku. Primero te das de alta y te envían un mail de confirmación, con este email vas a una página en la que pones la contraseña y listo. Ahora hay que instalar el gem de Heroku
gem install heroku Una vez hecho esto, añado también mi clave pública a Heroku para poder comunicarlo con Git (increible esto&amp;hellip; vaya ecosistema, me tiene alucinando).</description>
    </item>
    
    <item>
      <title>Control de Versiones con Git para Ruby on Rails</title>
      <link>https://www.aguasnegras.es/posts/2010/11/20-control-de-versiones-con-git-para-ruby-on-rails/</link>
      <pubDate>Sat, 20 Nov 2010 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2010/11/20-control-de-versiones-con-git-para-ruby-on-rails/</guid>
      <description>Vale, una semana más tarde, siguiente capítulo, Git. En Subversion ya soy el experto de la empresa, así que mato dos pájaros de un tiro aprendo Git por el mismo precio :)
Ya lo tengo instalado siguiendo las instrucciones de Pro Git, así que seguimos para adelante, la sugerencia de usar co en vez de checkout ya que checkout es demasiado &amp;ldquo;verbose&amp;rdquo; me la voy a saltar también, me gusta lo verbose (soy de los que odian los splash screens de las distros de linux, me gusta ver el texto).</description>
    </item>
    
    <item>
      <title>Entorno de Ruby on Rails - Parte 2</title>
      <link>https://www.aguasnegras.es/posts/2010/11/13-entorno-de-ruby-on-rails-parte-2/</link>
      <pubDate>Sat, 13 Nov 2010 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2010/11/13-entorno-de-ruby-on-rails-parte-2/</guid>
      <description>Bazinga! Eso era, por fín:
case@aesir:~/.rvm/usr/lib$ gem update --system Updating RubyGems Nothing to update Se vuelve a ejecutar el rvm &amp;ndash;create y el &amp;ndash;default y seguimos adelante, ahora a instalar rails con gem.
gem install rails --version 3.0.1 Muy bien, creo el directorio de proyecto y
rails new fist_app Ya está creada, repaso los directorios y algún fichero de configuración según el tutorial e instalo los gems con bundle tal y como se especifica.</description>
    </item>
    
  </channel>
</rss>
