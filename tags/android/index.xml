<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Android on AguasNegras</title>
    <link>https://www.aguasnegras.es/tags/android/</link>
    <description>Recent content in Android on AguasNegras</description>
    <image>
      <url>https://www.aguasnegras.es/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://www.aguasnegras.es/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 09 Mar 2013 00:00:00 +0000</lastBuildDate><atom:link href="https://www.aguasnegras.es/tags/android/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Emulador de Android en Ubuntu (Initializing hardware OpenGLES emulation support)</title>
      <link>https://www.aguasnegras.es/posts/2013/03/09-emulador-de-android-en-ubuntu-initializing-hardware-opengles-emulation-support/</link>
      <pubDate>Sat, 09 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2013/03/09-emulador-de-android-en-ubuntu-initializing-hardware-opengles-emulation-support/</guid>
      <description>A veces (normalmente en una instalación nueva), los emuladores de Android no arrancan en Ubuntu de 64 bits debido a un error con OpenGLES.
Para comprobar si la solución es aplicable, hay que ejecutar este comando desde la consola:
$ ./emulator -avd GalaxyS -verbose Donde GalaxyS será el nombre del avd que se desee arrancar, al final del log deberemos ver algo así:
emulator: Initializing hardware OpenGLES emulation support Violación de segmento (`core&amp;#39; generado) El problema y su solución se encuentra reportado aquí.</description>
    </item>
    
    <item>
      <title>CrankPlay, lógica propia</title>
      <link>https://www.aguasnegras.es/posts/2012/08/14-crankplay-l%C3%B3gica-propia/</link>
      <pubDate>Tue, 14 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2012/08/14-crankplay-l%C3%B3gica-propia/</guid>
      <description>Vale, una vez terminado el guarreo con el ciclo de vida, toca implementar la lógica de negocio propia de la aplicación. Al ser JustPlay un reproductor de mp3 y ogg, vamos a ver que lógica tenemos que implementar:
Entre los artefactos existentes voy a dividir la responsabilidad de la siguiente manera:</description>
    </item>
    
    <item>
      <title>CrankPlay, binding al servicio</title>
      <link>https://www.aguasnegras.es/posts/2012/05/18-crankplay-binding-al-servicio/</link>
      <pubDate>Fri, 18 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2012/05/18-crankplay-binding-al-servicio/</guid>
      <description>El siguiente paso en el desarrollo de JustPlay resulta bastante obvio, ligar el MediaPlayer con el MediaService, o lo que es lo mismo, hacer un bind. Para no perderme, he hecho un pequeño diagrama de interacción entre MediaPlayer y MediaService.
En él se aprecia que aparte de los métodos de negocio necesarios (denotados por una línea discontínua), todavía me faltan por implementar dos métodos del ciclo de vida: el bind y el unbind, que son precisamente los que me permiten establecer una comunicación bidireccional con el MediaService para indicar acciones y realizar y obtener resultados.</description>
    </item>
    
    <item>
      <title>JustPlay, explorador de archivos</title>
      <link>https://www.aguasnegras.es/posts/2012/05/17-crankplay-explorador-de-archivos/</link>
      <pubDate>Thu, 17 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2012/05/17-crankplay-explorador-de-archivos/</guid>
      <description>Uno de mis requisitos en JustPlay (de hecho, el fundamental), es poder reproducir a partir de archivos sueltos o directorios.
Por tanto, necesitaré un explorador de archivos, aunque sea muy básico, que permita ver los archivos en la memoria del dispositivo y añadirlos a una lista de reproducción. Gráficamente, la interacción entre las actividades sería así. En general la devolución del parámetro no tendrá mayor problema, ya que se puede hacer a través del intent de vuelta.</description>
    </item>
    
    <item>
      <title>CrankPlay, arquitectura</title>
      <link>https://www.aguasnegras.es/posts/2012/05/14-crankplay-arquitectura/</link>
      <pubDate>Mon, 14 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2012/05/14-crankplay-arquitectura/</guid>
      <description>Bueno, ya va siendo hora de empezar el trabajo en JustPlay.
Después de mucho documentarme sobre Activities, Services y Threads, creo que tengo una aproximación bastante buena a la arquitectura que voy a intentar implementar.
Un requisito fundamental es que la aplicación consuma los mínimos recursos posibles, con lo cual cabría pensar que se puede implementar mediante una Activity normal y corriente. Esto es un error, una Activity tiene un ciclo de vida determinado y cabe suponer (aunque no he hecho la prueba) que en cuanto pasara al estado &amp;ldquo;Paused&amp;rdquo;, se terminaría la reproducción de música.</description>
    </item>
    
    <item>
      <title>CrankPlay, controles de reproducción</title>
      <link>https://www.aguasnegras.es/posts/2012/04/16-crankplay-controles-de-reproducci%C3%B3n/</link>
      <pubDate>Mon, 16 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2012/04/16-crankplay-controles-de-reproducci%C3%B3n/</guid>
      <description>Última parte del tutorial que sigo para el CrankPlay, MusicDroid, ahora voy a añadir los controles básicos de reproducción. Esta parte se me antoja que no me será de mucha utilidad, ya que es bastante dependiente del diseño de la aplicación, pero que demonios&amp;hellip;
El objetivo de esta parte es añadir los controles de reproducción a la aplicación. Estos se mostrarán como una capa semitransparente sobre la lista de canciones.</description>
    </item>
    
    <item>
      <title>CrankPlay, Service para reproducir sonido.</title>
      <link>https://www.aguasnegras.es/posts/2012/04/06-crankplay-service-para-reproducir-sonido/</link>
      <pubDate>Fri, 06 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2012/04/06-crankplay-service-para-reproducir-sonido/</guid>
      <description>Siguiendo la segunda parte de MusicDroid, voy a hacer un Service (servicio) para reproducir la música. Para lo cual necesito primero definir claramente que es un Service.
Según la documentación oficial de Android, un Service es&amp;hellip; bueno, es una chapa, vaya que un Service es un proceso en segundo plano sin interfaz de usuario y con el cual puede comunicarse cualquier otro componente o artefacto que viva en el ecosistema. La parte interesante es que esta comunicación es asíncrona y se hace por paso de mensajes (como todo en Android), así que cuidado con esta parte.</description>
    </item>
    
    <item>
      <title>CrankPlay, mi primer proyecto Android. Parte 1</title>
      <link>https://www.aguasnegras.es/posts/2012/04/01-crankplay-mi-primer-proyecto-android.-parte-1/</link>
      <pubDate>Sun, 01 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2012/04/01-crankplay-mi-primer-proyecto-android.-parte-1/</guid>
      <description>Bueno, pues después de un tiempo dedicado a un proyecto que tengo por ahí y que anda un poco empantanado, voy a empezar a hacer algo que llevo tiempo queriendo hacer. Un reproductor de mp3 para mi móvil.
Voy a empezar haciendo una pequeña elicitación de requisitos &amp;ldquo;grosso modo&amp;rdquo; para tenerlo como guía de aquí en adelante.
Requisitos
El reproductor tendrá las siguientes funcionalidades:
Como requisitos no funcionales:
Enfoque del Desarrollo</description>
    </item>
    
    <item>
      <title>Cambiar orientación del emulador de Android</title>
      <link>https://www.aguasnegras.es/posts/2012/02/23-cambiar-orientaci%C3%B3n-del-emulador-de-android/</link>
      <pubDate>Thu, 23 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2012/02/23-cambiar-orientaci%C3%B3n-del-emulador-de-android/</guid>
      <description>Para cambiar la orientación del emulador de android de horizontal a vertical y viceversa, basta con pulsar ctrl+F11.</description>
    </item>
    
    <item>
      <title>Localización en Android</title>
      <link>https://www.aguasnegras.es/posts/2011/08/17-localizaci%C3%B3n-en-android/</link>
      <pubDate>Wed, 17 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/08/17-localizaci%C3%B3n-en-android/</guid>
      <description>En general en mi trabajo soy fanático de la internacionalización (i18n) y la localización (L18n), aunque la aplicación que este en desarrollo ni siquiera vaya a ser traducida nunca a ningún otro idioma.
El motivo es sencillo, si uso localización, cuando necesite poner un botón &amp;ldquo;Buscar&amp;rdquo; lo pondré en un archivo, por lo que al final todos los botones de &amp;ldquo;Buscar&amp;rdquo; de la aplicación apuntarán al mismo archivo (al mismo recurso).</description>
    </item>
    
    <item>
      <title>Tutorial de Bloc de Notas para Android - Parte 7</title>
      <link>https://www.aguasnegras.es/posts/2011/08/10-tutorial-de-bloc-de-notas-para-android-parte-7/</link>
      <pubDate>Wed, 10 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/08/10-tutorial-de-bloc-de-notas-para-android-parte-7/</guid>
      <description>Actualmente, la aplicación de bloc de notas deja mucho que desear, no solo con respecto al aspecto gráfico o usabilidad de la misma, sino que además no esta integrada en el ciclo de vida.
Una Activity tiene un ciclo de vida determinado y el programador se tiene que ajustar a él. Por ejemplo, si se arranca la aplicación y se le da a crear o editar una nota y a continuación al botón de atrás, la Activity se cierra inesperadamente.</description>
    </item>
    
    <item>
      <title>Tutorial de Bloc de Notas para Android - Interludio</title>
      <link>https://www.aguasnegras.es/posts/2011/08/04-tutorial-de-bloc-de-notas-para-android-interludio/</link>
      <pubDate>Thu, 04 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/08/04-tutorial-de-bloc-de-notas-para-android-interludio/</guid>
      <description>Bueno, pues como me quedé ayer con las ganas, voy a hacer hoy un poco de microbenchmarking. En general, y después de hablar con spCoder, me quedó claro que hay en general, cuatro formas de hacer ese onClick:
Por curiosidad, voy a aplicar cada una de las soluciones y voy a tomar dos medidas:
El proceso de prueba será:
Primera forma, código:
protected void onCreate(Bundle savedInstanceState) { long onCreateStartTime = System.</description>
    </item>
    
    <item>
      <title>Instalación de Entorno de Android en Linux</title>
      <link>https://www.aguasnegras.es/posts/2011/08/03-instalaci%C3%B3n-de-entorno-de-android-en-linux/</link>
      <pubDate>Wed, 03 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/08/03-instalaci%C3%B3n-de-entorno-de-android-en-linux/</guid>
      <description>Pasos para instalar el Android SDK, Eclipse y Android Development Toolkit en Eclipse:
Listo, con esto ya esta todo instalado en Eclipse y listo para funcionar, otro día repasaré el proceso de creado de AVDs.</description>
    </item>
    
    <item>
      <title>Tutorial de Bloc de Notas para Android - Parte 6</title>
      <link>https://www.aguasnegras.es/posts/2011/08/03-tutorial-de-bloc-de-notas-para-android-parte-6/</link>
      <pubDate>Wed, 03 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/08/03-tutorial-de-bloc-de-notas-para-android-parte-6/</guid>
      <description>Bueno, pues ayer había rellenado el cuerpo del onCreate del EditNote.java y quedaba una cosa que no me gusta un pelo, que es rellenar ese onClick de la clase anónima interna. Para no salirme mucho (de momento) del objetivo, que es el tutorial, me limitaré a seguir el tutorial y después haré los experimentos oportunos.
Recordando igualmente de antesdeayer, toda la interacción con la base de datos se hace en la Activity Notepadv2, con lo cual el onClick lo único que ha de hacer es montar el mensaje necesario y devolverlo a la actividad que le ha invocado.</description>
    </item>
    
    <item>
      <title>Tutorial de Bloc de Notas para Android - Parte 5</title>
      <link>https://www.aguasnegras.es/posts/2011/08/02-tutorial-de-bloc-de-notas-para-android-parte-5/</link>
      <pubDate>Tue, 02 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/08/02-tutorial-de-bloc-de-notas-para-android-parte-5/</guid>
      <description>Con respecto a la pantalla de edición/inserción de notas nuevas, nos dan ya el layout, llamado note_edit.xml. En él tenemos una distribución de elementos de la siguiente manera: LinearLayout, TextView, EditText y Button (todo ello dentro a su vez de un LinearLayout). El primer LinearLayout tiene orientation=vertical, para disponer los elementos en vertical (nada que ver con la posición de la pantalla) y el segundo tiene orientation=horizontal. Dentro de él hay un TextView y un EditText con layout_weight = 1.</description>
    </item>
    
    <item>
      <title>Tutorial de Bloc de Notas para Android – Parte 4</title>
      <link>https://www.aguasnegras.es/posts/2011/08/01-tutorial-de-bloc-de-notas-para-android-parte-4/</link>
      <pubDate>Mon, 01 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/08/01-tutorial-de-bloc-de-notas-para-android-parte-4/</guid>
      <description>Recapitulando lo anterior (hace ya 13 días a lo tonto&amp;hellip;), se había a añadir la funcionalidad CRUD al bloc de notas, ya tengo puestos los métodos en el código del activity y solo hará falta completar.
Primero. Borrado.
El borrado habitualmente se hace mediante el menú contextual (igual que la edición, ahora que lo pienso&amp;hellip;), para ello hay que registrar en el menú contextual el ListView, todo se puede hacer mediante métodos de la clase Activity, añadiendo al onCreate lo siguiente:</description>
    </item>
    
    <item>
      <title>Tutorial de Bloc de Notas para Android - Parte 3</title>
      <link>https://www.aguasnegras.es/posts/2011/07/12-tutorial-de-bloc-de-notas-para-android-parte-3/</link>
      <pubDate>Tue, 12 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/07/12-tutorial-de-bloc-de-notas-para-android-parte-3/</guid>
      <description>Sigo con el tutorial, que más vale tarde que nunca&amp;hellip; Entonces, repasando un poco lo hecho, tengo una tabla en la bd de la aplicación (un sqlite) que contiene las notas.
Asimismo, tengo un activity que se encarga de presentar una lista con las notas creadas que de momento no tienen nada, tan solo un título &amp;ldquo;Note x&amp;rdquo; donde x es un autosecuencial, además un secuencial de Java, por lo cual en cada ejecución de la aplicación se repiten ya que se resetea el contador a 1.</description>
    </item>
    
    <item>
      <title>Tutorial de Bloc de Notas para Android - Parte 2</title>
      <link>https://www.aguasnegras.es/posts/2011/07/04-tutorial-de-bloc-de-notas-para-android-parte-2/</link>
      <pubDate>Mon, 04 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/07/04-tutorial-de-bloc-de-notas-para-android-parte-2/</guid>
      <description>Para empezar a unir la base de datos con las vistas que hemos definido, lo primero es usar la clase ListActivity, que como dice la documentación, es una actividad que presenta una lista de elementos provenientes de un array o un cursor y aporta una serie de gestores llamados cuando el usuario interactua con ellos:
public class Notepadv1 extends ListActivity Ahora hay que completar el onCreate(), cuando se inicia la aplicación, ¿qué tiene que ocurrir?</description>
    </item>
    
    <item>
      <title>Tutorial de Bloc de Notas para Android - Parte 1</title>
      <link>https://www.aguasnegras.es/posts/2011/06/29-tutorial-de-bloc-de-notas-para-android-parte-1/</link>
      <pubDate>Wed, 29 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/06/29-tutorial-de-bloc-de-notas-para-android-parte-1/</guid>
      <description>La página principal de este tutorial esta aquí.
En general te recomiendan tener una idea de como funciona Android (para lo cual es bueno repasar los Fundamentos de Aplicaciones) y descargar los proyectos preconfigurados en zip.
Descomprimo el zip como recomiendan en $HOME/Android/NotepadCodeLab.
El tutorial esta divido en tres ejercicios (que vienen con sus correspondientes soluciones) y un extra para aprender a depurar el ciclo de vida de Android.
En el primero voy a crear una lista de notas y voy a añadir notas pero no voy a poder editarlas.</description>
    </item>
    
    <item>
      <title>Redimensionar el emulador de Android</title>
      <link>https://www.aguasnegras.es/posts/2011/06/28-redimensionar-el-emulador-de-android/</link>
      <pubDate>Tue, 28 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/06/28-redimensionar-el-emulador-de-android/</guid>
      <description>Nota mental:
Para redimensionar la ventana del emulador de android en Eclipse:
Listo</description>
    </item>
    
  </channel>
</rss>
