<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Tools of the Trade on AguasNegras</title>
    <link>https://www.aguasnegras.es/tags/tools-of-the-trade/</link>
    <description>Recent content in Tools of the Trade on AguasNegras</description>
    <image>
      <url>https://www.aguasnegras.es/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://www.aguasnegras.es/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 10 Jul 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://www.aguasnegras.es/tags/tools-of-the-trade/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Gestión de Credenciales de Git en Ubuntu Linux</title>
      <link>https://www.aguasnegras.es/posts/2020/07/10-credenciales_git_libsecret/</link>
      <pubDate>Fri, 10 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2020/07/10-credenciales_git_libsecret/</guid>
      <description>Últimamente he tenido que provisionar dos equipos nuevos (en casa y en el trabajo) y parte del proceso es instalar Git para acceder a los distintos repositorios (como el de este blog).
El acceso a un repositorio remoto de Git se puede hacer de dos maneras:
Por cruce de clave SSH: De lejos el más cómodo y mejor una vez configurado. Generas un clave en tu equipo, subes la parte pública a GitHub, GitLab, etc&amp;hellip; y a volar.</description>
    </item>
    
    <item>
      <title>Docker y almacenamiento. Como cambiar el directorio de las imágenes y contenedores</title>
      <link>https://www.aguasnegras.es/posts/2019/03/07-docker_y_almacenamiento/</link>
      <pubDate>Thu, 07 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2019/03/07-docker_y_almacenamiento/</guid>
      <description>Los contenedores no solo tienen la ventaja de ser entornos aislados sino que además ocupan muy poco espacio en disco. Esto se debe a varias causas:
No tienen el sistema operativo al completo (como una máquina virtual) lo cual ya de por sí es un ahorro de espacio. El proceso de tener una imagen e ir &amp;ldquo;instanciando&amp;rdquo; contenedor no ocupa tanto como podríamos esperar (tamaño de imagen x contenedores) gracias a UnionFS, ya que solo se cambian los cambios de cada contenedor en particular.</description>
    </item>
    
    <item>
      <title>PostgreSQL en Docker</title>
      <link>https://www.aguasnegras.es/posts/2019/03/05-postgresql_y_docker/</link>
      <pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2019/03/05-postgresql_y_docker/</guid>
      <description>Una de las ventajas de Docker es que te aisla del problema de tener que instalar el software que necesitas para desarrollar. La encapsulación en contenedores no es solo una ventaja para los pasos a producción y la infraestructura como código sino que lo es, especialmente en entornos de desarrollo. En muchas ocasiones instalas una base de datos o una cola de mensajes y ajustando la configuración te la terminas cargando y tienes que volver a crearla.</description>
    </item>
    
    <item>
      <title>SDKMAN</title>
      <link>https://www.aguasnegras.es/posts/2018/10/12-sdkman/</link>
      <pubDate>Fri, 12 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2018/10/12-sdkman/</guid>
      <description>SDKMAN es un gestor de entornos y herramientas Java. Cuando trabajas en un entorno &amp;ldquo;corporativo&amp;rdquo; (¿aburrido?) sueles tener claramente fijadas las versiones de herramientas de desarrollo a utilizar, por ejemplo, Java 8 en la versión 1.8.0_121 o Maven 3.2.1, etc&amp;hellip; Sin embargo cuando empiezas a cacharrear y a tratar de instalar cosas nuevas es relativamente normal que acabes con dos (o tres o seis) versiones del JDK: la &amp;ldquo;buena&amp;rdquo; (1.8), la de &amp;ldquo;los módulos&amp;rdquo; (9), la de &amp;ldquo;los val&amp;rdquo; (10) y la &amp;ldquo;nueva buena&amp;rdquo; (11).</description>
    </item>
    
    <item>
      <title>Logging en Java con SLF4J y Log4j2</title>
      <link>https://www.aguasnegras.es/posts/2013/09/02-logging-en-java-con-slf4j-y-log4j2/</link>
      <pubDate>Mon, 02 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2013/09/02-logging-en-java-con-slf4j-y-log4j2/</guid>
      <description>En este artículo se hace una breve introducción a la generación de logs en Java usando SLF4J y Log4j2, así como un breve repaso de las mejores prácticas relativas.
En Java se da una circunstancia muy extraña, siendo el logging tan importante como es, no hay una buena solución integrada en el framework como tal. Es cierto que existe la Java Logging API o Java Logging Framework, pero fue una adición bastante a posteriori (en concreto, se añadió en el 2002, en la versión 1.</description>
    </item>
    
    <item>
      <title>Emulador de Android en Ubuntu (Initializing hardware OpenGLES emulation support)</title>
      <link>https://www.aguasnegras.es/posts/2013/03/09-emulador-de-android-en-ubuntu-initializing-hardware-opengles-emulation-support/</link>
      <pubDate>Sat, 09 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2013/03/09-emulador-de-android-en-ubuntu-initializing-hardware-opengles-emulation-support/</guid>
      <description>A veces (normalmente en una instalación nueva), los emuladores de Android no arrancan en Ubuntu de 64 bits debido a un error con OpenGLES.
Para comprobar si la solución es aplicable, hay que ejecutar este comando desde la consola:
$ ./emulator -avd GalaxyS -verbose Donde GalaxyS será el nombre del avd que se desee arrancar, al final del log deberemos ver algo así:
emulator: Initializing hardware OpenGLES emulation support Violación de segmento (`core&amp;#39; generado) El problema y su solución se encuentra reportado aquí.</description>
    </item>
    
    <item>
      <title>WordPress SEO, aspectos avanzados y conclusiones.</title>
      <link>https://www.aguasnegras.es/posts/2012/04/05-wordpress-seo-aspectos-avanzados-y-conclusiones/</link>
      <pubDate>Thu, 05 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2012/04/05-wordpress-seo-aspectos-avanzados-y-conclusiones/</guid>
      <description>Sigo con el artículo de Yoast sobre WordPress SEO.
El siguiente punto en el que incide el artículo es en el de optimización de las etiquetas &amp;quot;&amp;lt;meta name=&amp;ldquo;description&amp;rdquo;&amp;gt;&amp;quot;, estas etiquetas son utilizadas por el buscador para devolver la página cuando su contenido es coincidente con una búsqueda.
Por defecto, el buscador utiliza la primera frase de la página, pero con el plugin podemos establecer una a mano. Si tomo el post anterior como ejemplo, ahora mismo me sale lo siguiente: &amp;ldquo;Bueno, pues para darme un poco de visibilidad en Google, he instalado el plugin WordPress SEO y tiene un estupendo artículo de acciones a &amp;hellip;&amp;rdquo; Esta descripción es obviamente mala y se puede mejorar bastante.</description>
    </item>
    
    <item>
      <title>WordPress SEO, Google Webmaster Tools y optimización de títulos.</title>
      <link>https://www.aguasnegras.es/posts/2012/04/04-wordpress-seo-google-webmaster-tools-y-optimizaci%C3%B3n-de-t%C3%ADtulos/</link>
      <pubDate>Wed, 04 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2012/04/04-wordpress-seo-google-webmaster-tools-y-optimizaci%C3%B3n-de-t%C3%ADtulos/</guid>
      <description>Bueno, pues para darme un poco de visibilidad en Google, he instalado el plugin WordPress SEO y tiene un estupendo artículo de acciones a realizar para utilizarlo, así que lo voy a seguir y voy a ir comentando.
A día de hoy lo que tengo es un WordPress 3.3.1 con WordPress SEO 1.1.5
A continuación voy a ir siguiendo lo más fielmente posible las instrucciones que se dan en el artículo punto por punto.</description>
    </item>
    
    <item>
      <title>Despliegue de Spring Roo en Heroku</title>
      <link>https://www.aguasnegras.es/posts/2011/10/13-despliegue-de-spring-roo-en-heroku/</link>
      <pubDate>Thu, 13 Oct 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/10/13-despliegue-de-spring-roo-en-heroku/</guid>
      <description>Hasta ahora, las aplicaciones que he desplegado eran muy básicas, hechas con jsp y acceso a base de datos a base de jdbc plano.
Estas tecnologías no estan mal (y de hecho son la base de todo lo posterior), pero lo más normal es utilizar frameworks para el desarrollo de aplicaciones Java.
La quinta práctica del libro de Java para Heroku es un despliegue de aplicaciones hechas con Spring Roo en Heroku.</description>
    </item>
    
    <item>
      <title>Add-ons para Heroku</title>
      <link>https://www.aguasnegras.es/posts/2011/09/22-add-ons-para-heroku/</link>
      <pubDate>Thu, 22 Sep 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/09/22-add-ons-para-heroku/</guid>
      <description>La arquitectura de Heroku es modular, es decir, se pueden añadir funcionalidades al Stack mediante piezas de software llamadas add-ons. Un ejemplo de eso lo vi aquí cuando añadí el soporte para gestión de releases a través de un add-on.
Hay bastantes más add-ons disponibles en la página, para enviar sms, para conectar como amazon rds, etc&amp;hellip; Los hay gratuitos, de pago, en beta&amp;hellip; en fín, de todo tipo.
En esta práctica voy a añadir el add-on de Redis.</description>
    </item>
    
    <item>
      <title>Procesos Java en Heroku</title>
      <link>https://www.aguasnegras.es/posts/2011/09/22-procesos-java-en-heroku/</link>
      <pubDate>Thu, 22 Sep 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/09/22-procesos-java-en-heroku/</guid>
      <description>Heroku no solo sirve para ejecutar aplicaciones web Java, sino que en realidad sirve para ejecutar cualquier tipo de aplicación Java. Observando el proyecto podemos ver que hay dos aplicaciones bien diferenciadas, la aplicación web (que se lanza a través del script webapp generado por Maven) y la aplicación SchemaGenerator, ejecutada a través del script schemaGenerator. Mientras que la primera es una aplicación web normal y corriente, SchemaGenerator es simplemente un proceso Java puro, se lanza se ejecuta y termina sin ningún tipo de interfaz gráfica involucrada.</description>
    </item>
    
    <item>
      <title>Java, PostgreSQL y Heroku</title>
      <link>https://www.aguasnegras.es/posts/2011/09/18-java-postgresql-y-heroku/</link>
      <pubDate>Sun, 18 Sep 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/09/18-java-postgresql-y-heroku/</guid>
      <description>Ya he visto como desplegar en Heroku, pero lo que he desplegado no llega ni al nivel de aplicación web, en realidad es una página web estática y punto. Para poder considerarla aplicación web ha de tener algún tipo de contenido dinámico, normalmente este contenido se genera de algún almacén persistente, usualmente una base de datos. Por tanto voy a ver como me las apaño para poner una base de datos en Heroku y atacarla desde mi aplicación.</description>
    </item>
    
    <item>
      <title>Java en Heroku</title>
      <link>https://www.aguasnegras.es/posts/2011/09/16-java-en-heroku/</link>
      <pubDate>Fri, 16 Sep 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/09/16-java-en-heroku/</guid>
      <description>Una de las cosas que más me impresionó de Ruby on Rails, más que el framework en sí o el lenguaje, fue el excelente soporte que había creado la comunidad. Hablo específicamente de como se enlazaba tu proyecto local con GitHub y GitHub con Heroku, con lo cual podías tener el proyecto en producción en cuestión de minutos.
Esto es algo que lamentablemente no he visto en Java en los cinco años que llevo dedicado a estos menesteres, y menos con un alojamiento de la categoría de Heroku (otro día hablaré sobre ello y el PaaS, etc&amp;hellip;).</description>
    </item>
    
    <item>
      <title>GitHub y Markdown</title>
      <link>https://www.aguasnegras.es/posts/2011/08/30-github-y-markdown/</link>
      <pubDate>Tue, 30 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/08/30-github-y-markdown/</guid>
      <description>Si entro en el repositorio PruebaGit que cree en este artículo, GitHub es tan amable de avisarme de que no encuentra un archivo README.
En primer lugar, ¿qué es un README? Un archivo README contiene información genérica sobre el proyecto, como instalar, como configurar, como usar, licencia, contacto con el autor, bugs, etc&amp;hellip; Para más detalles esta el artículo de la wikipedia (en inglés, el artículo en español es bastante malo).</description>
    </item>
    
    <item>
      <title>Git, EGit y GitHub.</title>
      <link>https://www.aguasnegras.es/posts/2011/08/06-git-egit-y-github/</link>
      <pubDate>Sat, 06 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/08/06-git-egit-y-github/</guid>
      <description>Introducción
Este tutorial pretende reflejar un ciclo de trabajo básico con Git, EGit y GitHub, crear un nuevo repositorio, añadir y borrar archivos y subir ese repositorio a GitHub. Si quieres saber que es un sistema de control de versiones, las diferencias entre un sistema de control de versiones centralizado y uno distribuido o por qué Git y no Mercurial o Bazaar, te recomiendo que le eches un vistazo a alguna de las referencias.</description>
    </item>
    
  </channel>
</rss>
