<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Tutorial on AguasNegras</title>
    <link>https://www.aguasnegras.es/tags/tutorial/</link>
    <description>Recent content in Tutorial on AguasNegras</description>
    <image>
      <url>https://www.aguasnegras.es/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://www.aguasnegras.es/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 02 Sep 2013 00:00:00 +0000</lastBuildDate><atom:link href="https://www.aguasnegras.es/tags/tutorial/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Logging en Java con SLF4J y Log4j2</title>
      <link>https://www.aguasnegras.es/posts/2013/09/02-logging-en-java-con-slf4j-y-log4j2/</link>
      <pubDate>Mon, 02 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2013/09/02-logging-en-java-con-slf4j-y-log4j2/</guid>
      <description>En este artículo se hace una breve introducción a la generación de logs en Java usando SLF4J y Log4j2, así como un breve repaso de las mejores prácticas relativas.
En Java se da una circunstancia muy extraña, siendo el logging tan importante como es, no hay una buena solución integrada en el framework como tal. Es cierto que existe la Java Logging API o Java Logging Framework, pero fue una adición bastante a posteriori (en concreto, se añadió en el 2002, en la versión 1.</description>
    </item>
    
    <item>
      <title>WordPress SEO, aspectos avanzados y conclusiones.</title>
      <link>https://www.aguasnegras.es/posts/2012/04/05-wordpress-seo-aspectos-avanzados-y-conclusiones/</link>
      <pubDate>Thu, 05 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2012/04/05-wordpress-seo-aspectos-avanzados-y-conclusiones/</guid>
      <description>Sigo con el artículo de Yoast sobre WordPress SEO.
El siguiente punto en el que incide el artículo es en el de optimización de las etiquetas &amp;quot;&amp;lt;meta name=&amp;ldquo;description&amp;rdquo;&amp;gt;&amp;quot;, estas etiquetas son utilizadas por el buscador para devolver la página cuando su contenido es coincidente con una búsqueda.
Por defecto, el buscador utiliza la primera frase de la página, pero con el plugin podemos establecer una a mano. Si tomo el post anterior como ejemplo, ahora mismo me sale lo siguiente: &amp;ldquo;Bueno, pues para darme un poco de visibilidad en Google, he instalado el plugin WordPress SEO y tiene un estupendo artículo de acciones a &amp;hellip;&amp;rdquo; Esta descripción es obviamente mala y se puede mejorar bastante.</description>
    </item>
    
    <item>
      <title>WordPress SEO, Google Webmaster Tools y optimización de títulos.</title>
      <link>https://www.aguasnegras.es/posts/2012/04/04-wordpress-seo-google-webmaster-tools-y-optimizaci%C3%B3n-de-t%C3%ADtulos/</link>
      <pubDate>Wed, 04 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2012/04/04-wordpress-seo-google-webmaster-tools-y-optimizaci%C3%B3n-de-t%C3%ADtulos/</guid>
      <description>Bueno, pues para darme un poco de visibilidad en Google, he instalado el plugin WordPress SEO y tiene un estupendo artículo de acciones a realizar para utilizarlo, así que lo voy a seguir y voy a ir comentando.
A día de hoy lo que tengo es un WordPress 3.3.1 con WordPress SEO 1.1.5
A continuación voy a ir siguiendo lo más fielmente posible las instrucciones que se dan en el artículo punto por punto.</description>
    </item>
    
    <item>
      <title>Amazon Elastic Beanstalk</title>
      <link>https://www.aguasnegras.es/posts/2012/01/19-amazon-elastic-beanstalk/</link>
      <pubDate>Thu, 19 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2012/01/19-amazon-elastic-beanstalk/</guid>
      <description>Visto que con Heroku se me esta atragantando el tema del despliegue de JSF 2, me he decidido a seguir los cantos de sirena y probar Amazon Elastic Beanstalk. La publicidad dice que Amazon me dá gratuitamente un Tomcat 6 o Tomcat 7 en la nube, así que merecía darle una ojeada. Lo primero de lo que me doy cuenta es que Amazon Elastic Beanstalk en realidad no es solo un Tomcat, sino que mas bien podríamos definirlo como un agrupamiento de tecnologías que Amazon ya tenía que se ofrecen simplificadamente y bajo un mismo paragüas, como EC2, S3, EBS, CloudWatch, etc&amp;hellip; La página de Beanstalk promete que se despliegan WARs normales y corrientes y que se puede usar cualquier librería Java con normalidad, a esto le sumamos Amazon SimpleDB como base de datos relacional y Amazon DynamoDB como NoSQL y tenemos un stack potentísimo a nuestra disposición.</description>
    </item>
    
    <item>
      <title>Despliegue de Spring Roo en Heroku</title>
      <link>https://www.aguasnegras.es/posts/2011/10/13-despliegue-de-spring-roo-en-heroku/</link>
      <pubDate>Thu, 13 Oct 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/10/13-despliegue-de-spring-roo-en-heroku/</guid>
      <description>Hasta ahora, las aplicaciones que he desplegado eran muy básicas, hechas con jsp y acceso a base de datos a base de jdbc plano.
Estas tecnologías no estan mal (y de hecho son la base de todo lo posterior), pero lo más normal es utilizar frameworks para el desarrollo de aplicaciones Java.
La quinta práctica del libro de Java para Heroku es un despliegue de aplicaciones hechas con Spring Roo en Heroku.</description>
    </item>
    
    <item>
      <title>Add-ons para Heroku</title>
      <link>https://www.aguasnegras.es/posts/2011/09/22-add-ons-para-heroku/</link>
      <pubDate>Thu, 22 Sep 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/09/22-add-ons-para-heroku/</guid>
      <description>La arquitectura de Heroku es modular, es decir, se pueden añadir funcionalidades al Stack mediante piezas de software llamadas add-ons. Un ejemplo de eso lo vi aquí cuando añadí el soporte para gestión de releases a través de un add-on.
Hay bastantes más add-ons disponibles en la página, para enviar sms, para conectar como amazon rds, etc&amp;hellip; Los hay gratuitos, de pago, en beta&amp;hellip; en fín, de todo tipo.
En esta práctica voy a añadir el add-on de Redis.</description>
    </item>
    
    <item>
      <title>Procesos Java en Heroku</title>
      <link>https://www.aguasnegras.es/posts/2011/09/22-procesos-java-en-heroku/</link>
      <pubDate>Thu, 22 Sep 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/09/22-procesos-java-en-heroku/</guid>
      <description>Heroku no solo sirve para ejecutar aplicaciones web Java, sino que en realidad sirve para ejecutar cualquier tipo de aplicación Java. Observando el proyecto podemos ver que hay dos aplicaciones bien diferenciadas, la aplicación web (que se lanza a través del script webapp generado por Maven) y la aplicación SchemaGenerator, ejecutada a través del script schemaGenerator. Mientras que la primera es una aplicación web normal y corriente, SchemaGenerator es simplemente un proceso Java puro, se lanza se ejecuta y termina sin ningún tipo de interfaz gráfica involucrada.</description>
    </item>
    
    <item>
      <title>Java, PostgreSQL y Heroku</title>
      <link>https://www.aguasnegras.es/posts/2011/09/18-java-postgresql-y-heroku/</link>
      <pubDate>Sun, 18 Sep 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/09/18-java-postgresql-y-heroku/</guid>
      <description>Ya he visto como desplegar en Heroku, pero lo que he desplegado no llega ni al nivel de aplicación web, en realidad es una página web estática y punto. Para poder considerarla aplicación web ha de tener algún tipo de contenido dinámico, normalmente este contenido se genera de algún almacén persistente, usualmente una base de datos. Por tanto voy a ver como me las apaño para poner una base de datos en Heroku y atacarla desde mi aplicación.</description>
    </item>
    
    <item>
      <title>Java en Heroku</title>
      <link>https://www.aguasnegras.es/posts/2011/09/16-java-en-heroku/</link>
      <pubDate>Fri, 16 Sep 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/09/16-java-en-heroku/</guid>
      <description>Una de las cosas que más me impresionó de Ruby on Rails, más que el framework en sí o el lenguaje, fue el excelente soporte que había creado la comunidad. Hablo específicamente de como se enlazaba tu proyecto local con GitHub y GitHub con Heroku, con lo cual podías tener el proyecto en producción en cuestión de minutos.
Esto es algo que lamentablemente no he visto en Java en los cinco años que llevo dedicado a estos menesteres, y menos con un alojamiento de la categoría de Heroku (otro día hablaré sobre ello y el PaaS, etc&amp;hellip;).</description>
    </item>
    
    <item>
      <title>GitHub y Markdown</title>
      <link>https://www.aguasnegras.es/posts/2011/08/30-github-y-markdown/</link>
      <pubDate>Tue, 30 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/08/30-github-y-markdown/</guid>
      <description>Si entro en el repositorio PruebaGit que cree en este artículo, GitHub es tan amable de avisarme de que no encuentra un archivo README.
En primer lugar, ¿qué es un README? Un archivo README contiene información genérica sobre el proyecto, como instalar, como configurar, como usar, licencia, contacto con el autor, bugs, etc&amp;hellip; Para más detalles esta el artículo de la wikipedia (en inglés, el artículo en español es bastante malo).</description>
    </item>
    
    <item>
      <title>Localización en Android</title>
      <link>https://www.aguasnegras.es/posts/2011/08/17-localizaci%C3%B3n-en-android/</link>
      <pubDate>Wed, 17 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/08/17-localizaci%C3%B3n-en-android/</guid>
      <description>En general en mi trabajo soy fanático de la internacionalización (i18n) y la localización (L18n), aunque la aplicación que este en desarrollo ni siquiera vaya a ser traducida nunca a ningún otro idioma.
El motivo es sencillo, si uso localización, cuando necesite poner un botón &amp;ldquo;Buscar&amp;rdquo; lo pondré en un archivo, por lo que al final todos los botones de &amp;ldquo;Buscar&amp;rdquo; de la aplicación apuntarán al mismo archivo (al mismo recurso).</description>
    </item>
    
    <item>
      <title>Tutorial de Bloc de Notas para Android - Parte 7</title>
      <link>https://www.aguasnegras.es/posts/2011/08/10-tutorial-de-bloc-de-notas-para-android-parte-7/</link>
      <pubDate>Wed, 10 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/08/10-tutorial-de-bloc-de-notas-para-android-parte-7/</guid>
      <description>Actualmente, la aplicación de bloc de notas deja mucho que desear, no solo con respecto al aspecto gráfico o usabilidad de la misma, sino que además no esta integrada en el ciclo de vida.
Una Activity tiene un ciclo de vida determinado y el programador se tiene que ajustar a él. Por ejemplo, si se arranca la aplicación y se le da a crear o editar una nota y a continuación al botón de atrás, la Activity se cierra inesperadamente.</description>
    </item>
    
    <item>
      <title>Git, EGit y GitHub.</title>
      <link>https://www.aguasnegras.es/posts/2011/08/06-git-egit-y-github/</link>
      <pubDate>Sat, 06 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/08/06-git-egit-y-github/</guid>
      <description>Introducción
Este tutorial pretende reflejar un ciclo de trabajo básico con Git, EGit y GitHub, crear un nuevo repositorio, añadir y borrar archivos y subir ese repositorio a GitHub. Si quieres saber que es un sistema de control de versiones, las diferencias entre un sistema de control de versiones centralizado y uno distribuido o por qué Git y no Mercurial o Bazaar, te recomiendo que le eches un vistazo a alguna de las referencias.</description>
    </item>
    
    <item>
      <title>Tutorial de Bloc de Notas para Android - Interludio</title>
      <link>https://www.aguasnegras.es/posts/2011/08/04-tutorial-de-bloc-de-notas-para-android-interludio/</link>
      <pubDate>Thu, 04 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/08/04-tutorial-de-bloc-de-notas-para-android-interludio/</guid>
      <description>Bueno, pues como me quedé ayer con las ganas, voy a hacer hoy un poco de microbenchmarking. En general, y después de hablar con spCoder, me quedó claro que hay en general, cuatro formas de hacer ese onClick:
Por curiosidad, voy a aplicar cada una de las soluciones y voy a tomar dos medidas:
El proceso de prueba será:
Primera forma, código:
protected void onCreate(Bundle savedInstanceState) { long onCreateStartTime = System.</description>
    </item>
    
    <item>
      <title>Instalación de Entorno de Android en Linux</title>
      <link>https://www.aguasnegras.es/posts/2011/08/03-instalaci%C3%B3n-de-entorno-de-android-en-linux/</link>
      <pubDate>Wed, 03 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/08/03-instalaci%C3%B3n-de-entorno-de-android-en-linux/</guid>
      <description>Pasos para instalar el Android SDK, Eclipse y Android Development Toolkit en Eclipse:
Listo, con esto ya esta todo instalado en Eclipse y listo para funcionar, otro día repasaré el proceso de creado de AVDs.</description>
    </item>
    
    <item>
      <title>Tutorial de Bloc de Notas para Android - Parte 6</title>
      <link>https://www.aguasnegras.es/posts/2011/08/03-tutorial-de-bloc-de-notas-para-android-parte-6/</link>
      <pubDate>Wed, 03 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/08/03-tutorial-de-bloc-de-notas-para-android-parte-6/</guid>
      <description>Bueno, pues ayer había rellenado el cuerpo del onCreate del EditNote.java y quedaba una cosa que no me gusta un pelo, que es rellenar ese onClick de la clase anónima interna. Para no salirme mucho (de momento) del objetivo, que es el tutorial, me limitaré a seguir el tutorial y después haré los experimentos oportunos.
Recordando igualmente de antesdeayer, toda la interacción con la base de datos se hace en la Activity Notepadv2, con lo cual el onClick lo único que ha de hacer es montar el mensaje necesario y devolverlo a la actividad que le ha invocado.</description>
    </item>
    
    <item>
      <title>Tutorial de Bloc de Notas para Android - Parte 5</title>
      <link>https://www.aguasnegras.es/posts/2011/08/02-tutorial-de-bloc-de-notas-para-android-parte-5/</link>
      <pubDate>Tue, 02 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/08/02-tutorial-de-bloc-de-notas-para-android-parte-5/</guid>
      <description>Con respecto a la pantalla de edición/inserción de notas nuevas, nos dan ya el layout, llamado note_edit.xml. En él tenemos una distribución de elementos de la siguiente manera: LinearLayout, TextView, EditText y Button (todo ello dentro a su vez de un LinearLayout). El primer LinearLayout tiene orientation=vertical, para disponer los elementos en vertical (nada que ver con la posición de la pantalla) y el segundo tiene orientation=horizontal. Dentro de él hay un TextView y un EditText con layout_weight = 1.</description>
    </item>
    
    <item>
      <title>Tutorial de Bloc de Notas para Android – Parte 4</title>
      <link>https://www.aguasnegras.es/posts/2011/08/01-tutorial-de-bloc-de-notas-para-android-parte-4/</link>
      <pubDate>Mon, 01 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/08/01-tutorial-de-bloc-de-notas-para-android-parte-4/</guid>
      <description>Recapitulando lo anterior (hace ya 13 días a lo tonto&amp;hellip;), se había a añadir la funcionalidad CRUD al bloc de notas, ya tengo puestos los métodos en el código del activity y solo hará falta completar.
Primero. Borrado.
El borrado habitualmente se hace mediante el menú contextual (igual que la edición, ahora que lo pienso&amp;hellip;), para ello hay que registrar en el menú contextual el ListView, todo se puede hacer mediante métodos de la clase Activity, añadiendo al onCreate lo siguiente:</description>
    </item>
    
    <item>
      <title>Tutorial de Bloc de Notas para Android - Parte 3</title>
      <link>https://www.aguasnegras.es/posts/2011/07/12-tutorial-de-bloc-de-notas-para-android-parte-3/</link>
      <pubDate>Tue, 12 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/07/12-tutorial-de-bloc-de-notas-para-android-parte-3/</guid>
      <description>Sigo con el tutorial, que más vale tarde que nunca&amp;hellip; Entonces, repasando un poco lo hecho, tengo una tabla en la bd de la aplicación (un sqlite) que contiene las notas.
Asimismo, tengo un activity que se encarga de presentar una lista con las notas creadas que de momento no tienen nada, tan solo un título &amp;ldquo;Note x&amp;rdquo; donde x es un autosecuencial, además un secuencial de Java, por lo cual en cada ejecución de la aplicación se repiten ya que se resetea el contador a 1.</description>
    </item>
    
    <item>
      <title>Tutorial de Bloc de Notas para Android - Parte 2</title>
      <link>https://www.aguasnegras.es/posts/2011/07/04-tutorial-de-bloc-de-notas-para-android-parte-2/</link>
      <pubDate>Mon, 04 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/07/04-tutorial-de-bloc-de-notas-para-android-parte-2/</guid>
      <description>Para empezar a unir la base de datos con las vistas que hemos definido, lo primero es usar la clase ListActivity, que como dice la documentación, es una actividad que presenta una lista de elementos provenientes de un array o un cursor y aporta una serie de gestores llamados cuando el usuario interactua con ellos:
public class Notepadv1 extends ListActivity Ahora hay que completar el onCreate(), cuando se inicia la aplicación, ¿qué tiene que ocurrir?</description>
    </item>
    
    <item>
      <title>Tutorial de Bloc de Notas para Android - Parte 1</title>
      <link>https://www.aguasnegras.es/posts/2011/06/29-tutorial-de-bloc-de-notas-para-android-parte-1/</link>
      <pubDate>Wed, 29 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.aguasnegras.es/posts/2011/06/29-tutorial-de-bloc-de-notas-para-android-parte-1/</guid>
      <description>La página principal de este tutorial esta aquí.
En general te recomiendan tener una idea de como funciona Android (para lo cual es bueno repasar los Fundamentos de Aplicaciones) y descargar los proyectos preconfigurados en zip.
Descomprimo el zip como recomiendan en $HOME/Android/NotepadCodeLab.
El tutorial esta divido en tres ejercicios (que vienen con sus correspondientes soluciones) y un extra para aprender a depurar el ciclo de vida de Android.
En el primero voy a crear una lista de notas y voy a añadir notas pero no voy a poder editarlas.</description>
    </item>
    
  </channel>
</rss>
